{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\GitHub\\\\datatable-search-filter\\\\src\\\\pagination\\\\pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Datatable from \"../datatable\";\nimport Favourites from \"../Favourites/favourites\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PaginationComponent({\n  isLoading,\n  data,\n  search,\n  currentPage,\n  setcurrentPage,\n  showFavourites,\n  favourites\n}) {\n  _s();\n\n  const [itemsPerPage, setitemsPerPage] = useState(10);\n  const [pageNumberLimit, setpageNumberLimit] = useState(10);\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(20);\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\n\n  const handleClick = event => {\n    setcurrentPage(Number(event.target.id));\n  };\n\n  const pages = [];\n\n  for (let i = 1; i <= Math.ceil(search(data).length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = search(data).slice(indexOfFirstItem, indexOfLastItem);\n  const renderPageNumbers = pages.map(number => {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: number,\n        onClick: handleClick,\n        className: currentPage == number ? \"active\" : null,\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    } else {\n      return null;\n    }\n  });\n\n  const handleNextbtn = () => {\n    setcurrentPage(currentPage + 1);\n\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  };\n\n  const handlePrevbtn = () => {\n    setcurrentPage(currentPage - 1);\n\n    if ((currentPage - 1) % pageNumberLimit == 0) {\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n    }\n  };\n\n  let pageIncrementBtn = null;\n\n  if (pages.length > maxPageNumberLimit) {\n    pageIncrementBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: handleNextbtn,\n      children: \" \\u2026 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 24\n    }, this);\n  }\n\n  let pageDecrementBtn = null;\n\n  if (minPageNumberLimit >= 1) {\n    pageDecrementBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: handlePrevbtn,\n      children: \" \\u2026 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 24\n    }, this);\n  }\n\n  const handleLoadMore = () => {\n    setitemsPerPage(itemsPerPage + 5);\n  };\n\n  const handleLoadLess = () => {\n    if (itemsPerPage > 10) setitemsPerPage(itemsPerPage - 5);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!showFavourites ? /*#__PURE__*/_jsxDEV(Datatable, {\n      currentPage: currentPage,\n      isLoading: isLoading,\n      data: search(currentItems)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Favourites, {\n      currentPage: currentPage,\n      isLoading: isLoading,\n      data: search(currentItems)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pageNumbers\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"loadmore\",\n          onClick: handlePrevbtn,\n          disabled: currentPage == pages[0] ? true : false,\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), pageDecrementBtn, renderPageNumbers, pageIncrementBtn, /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextbtn,\n          disabled: currentPage == pages[pages.length - 1] ? true : false,\n          className: \"loadmore\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLoadMore,\n      className: \"loadmore\",\n      children: \"Load More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), \"\\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLoadLess,\n      className: \"loadmore\",\n      children: \"show less\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PaginationComponent, \"kXhKyttfB3JHQGdZBjaMYH+jBC0=\");\n\n_c = PaginationComponent;\nexport default PaginationComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginationComponent\");","map":{"version":3,"sources":["C:/Users/Asus/Documents/GitHub/datatable-search-filter/src/pagination/pagination.jsx"],"names":["React","useEffect","useState","Datatable","Favourites","PaginationComponent","isLoading","data","search","currentPage","setcurrentPage","showFavourites","favourites","itemsPerPage","setitemsPerPage","pageNumberLimit","setpageNumberLimit","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","handleClick","event","Number","target","id","pages","i","Math","ceil","length","push","indexOfLastItem","indexOfFirstItem","currentItems","slice","renderPageNumbers","map","number","handleNextbtn","handlePrevbtn","pageIncrementBtn","pageDecrementBtn","handleLoadMore","handleLoadLess"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Datatable from \"../datatable\";\r\nimport Favourites from \"../Favourites/favourites\";\r\nimport \"./styles.css\";\r\n\r\nfunction PaginationComponent({\r\n  isLoading,\r\n  data,\r\n  search,\r\n  currentPage,\r\n  setcurrentPage,\r\n  showFavourites,\r\n  favourites,\r\n}) {\r\n  const [itemsPerPage, setitemsPerPage] = useState(10);\r\n\r\n  const [pageNumberLimit, setpageNumberLimit] = useState(10);\r\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(20);\r\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n\r\n  const handleClick = (event) => {\r\n    setcurrentPage(Number(event.target.id));\r\n  };\r\n\r\n  const pages = [];\r\n  for (let i = 1; i <= Math.ceil(search(data).length / itemsPerPage); i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = search(data).slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const renderPageNumbers = pages.map((number) => {\r\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n      return (\r\n        <li\r\n          key={number}\r\n          id={number}\r\n          onClick={handleClick}\r\n          className={currentPage == number ? \"active\" : null}\r\n        >\r\n          {number}\r\n        </li>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  const handleNextbtn = () => {\r\n    setcurrentPage(currentPage + 1);\r\n\r\n    if (currentPage + 1 > maxPageNumberLimit) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n    }\r\n  };\r\n\r\n  const handlePrevbtn = () => {\r\n    setcurrentPage(currentPage - 1);\r\n\r\n    if ((currentPage - 1) % pageNumberLimit == 0) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n    }\r\n  };\r\n\r\n  let pageIncrementBtn = null;\r\n  if (pages.length > maxPageNumberLimit) {\r\n    pageIncrementBtn = <li onClick={handleNextbtn}> &hellip; </li>;\r\n  }\r\n\r\n  let pageDecrementBtn = null;\r\n  if (minPageNumberLimit >= 1) {\r\n    pageDecrementBtn = <li onClick={handlePrevbtn}> &hellip; </li>;\r\n  }\r\n\r\n  const handleLoadMore = () => {\r\n    setitemsPerPage(itemsPerPage + 5);\r\n  };\r\n\r\n  const handleLoadLess = () => {\r\n    if (itemsPerPage > 10) setitemsPerPage(itemsPerPage - 5);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!showFavourites ? (\r\n        <Datatable\r\n          currentPage={currentPage}\r\n          isLoading={isLoading}\r\n          data={search(currentItems)}\r\n        />\r\n      ) : (\r\n        <Favourites\r\n          currentPage={currentPage}\r\n          isLoading={isLoading}\r\n          data={search(currentItems)}\r\n        />\r\n      )}\r\n      <ul className=\"pageNumbers\">\r\n        <li>\r\n          <button\r\n            className=\"loadmore\"\r\n            onClick={handlePrevbtn}\r\n            disabled={currentPage == pages[0] ? true : false}\r\n          >\r\n            Prev\r\n          </button>\r\n        </li>\r\n        {pageDecrementBtn}\r\n        {renderPageNumbers}\r\n        {pageIncrementBtn}\r\n\r\n        <li>\r\n          <button\r\n            onClick={handleNextbtn}\r\n            disabled={currentPage == pages[pages.length - 1] ? true : false}\r\n            className=\"loadmore\"\r\n          >\r\n            Next\r\n          </button>\r\n        </li>\r\n      </ul>\r\n      <button onClick={handleLoadMore} className=\"loadmore\">\r\n        Load More\r\n      </button>\r\n      &nbsp; &nbsp;\r\n      <button onClick={handleLoadLess} className=\"loadmore\">\r\n        show less\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PaginationComponent;\r\n"]},"metadata":{},"sourceType":"module"}