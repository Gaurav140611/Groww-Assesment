{"version":3,"sources":["hooks/useData.js","Components/datatable/dataTable.jsx","Components/pagination/pagination.jsx","App/app.jsx","Components/Individual_Bank_Details/individual_Bank.jsx","index.jsx"],"names":["useData","props","useState","data","setData","IFSC","setIfsc","isLoading","setIsLoading","category","city","formData","setFormData","useEffect","localStorage","getItem","JSON","parse","toUpperCase","fetch","then","response","json","setItem","stringify","Datatable","currentPage","history","useHistory","columns","Object","keys","selectedRow","setSelectedRow","selectedRowPage","setSelectedRowPage","className","map","heading","row","index","onClick","e","item","ifsc","push","column","PaginationComponent","search","setcurrentPage","itemsPerPage","setitemsPerPage","location","useLocation","pageNumberLimit","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","handleClick","event","Number","target","id","pages","i","Math","ceil","length","indexOfLastItem","indexOfFirstItem","currentItems","slice","renderPageNumbers","number","handleNextbtn","handlePrevbtn","pageIncrementBtn","pageDecrementBtn","console","log","pathname","disabled","require","polyfill","Individual_Bank","useParams","rowdata","filter","Box","margin","mt","Card","style","backgroundColor","variant","ml","Typography","color","Divider","CardContent","Grid","container","spacing","xs","fontWeight","bank_name","bank_id","branch","state","address","district","ReactDOM","render","StrictMode","exact","path","to","component","styles","control","height","alignItems","borderWidth","borderColor","borderRadius","fontSize","fontFamily","menu","q","setQ","searchColumns","setSearchColumns","loading","size","type","value","placeholder","onChange","class","name","object","action","prevFormData","options","label","defaultValue","theme","colors","text","primary25","primary","primary50","rows","some","toString","toLowerCase","indexOf","document","getElementById"],"mappings":"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","file":"static/js/main.39965f07.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst useData = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [IFSC, setIfsc] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [formData, setFormData] = useState({ category: \"\", city: \"MUMBAI\" });\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    if (localStorage.getItem(formData.city) !== null) {\r\n      setIsLoading(false);\r\n      setData(JSON.parse(localStorage.getItem(formData.city.toUpperCase())));\r\n    } else {\r\n      fetch(\r\n        `https://vast-shore-74260.herokuapp.com/banks?city=${formData.city}`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          localStorage.setItem(formData.city, JSON.stringify(json));\r\n          setData(json);\r\n          setIsLoading(false);\r\n        });\r\n    }\r\n  }, [formData.city]);\r\n\r\n  return {\r\n    data,\r\n    setData,\r\n    isLoading,\r\n    setIsLoading,\r\n    formData,\r\n    setFormData,\r\n    IFSC,\r\n    setIfsc,\r\n  };\r\n};\r\n\r\nexport default useData;\r\n","import { Button, Icon } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useData from \"../../hooks/useData\";\r\n\r\nexport default function Datatable({ isLoading, data, currentPage }) {\r\n  const history = useHistory();\r\n  const columns = data[0] && Object.keys(data[0]);\r\n  const [selectedRow, setSelectedRow] = useState(-1);\r\n  const [selectedRowPage, setSelectedRowPage] = useState(-1);\r\n  const handleClick = (item) => history.push(`/bank-details/${item}`);\r\n  const { setIfsc } = useData();\r\n\r\n  return (\r\n    <table className=\"styled-table\">\r\n      <thead>\r\n        <tr>{data[0] && columns.map((heading) => <th>{heading}</th>)}</tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((row, index) => (\r\n          <tr\r\n            key={index}\r\n            onClick={(e) => {\r\n              setSelectedRow(index);\r\n              setSelectedRowPage(currentPage);\r\n              handleClick(row.ifsc);\r\n              setIfsc(row.ifsc);\r\n            }}\r\n            className={\r\n              selectedRow == index && selectedRowPage === currentPage\r\n                ? \"active-row\"\r\n                : null\r\n            }\r\n          >\r\n            {columns.map((column) => (\r\n              <td>{row[column]}</td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport Datatable from \"../datatable/dataTable\";\r\n\r\nimport \"./styles.css\";\r\n\r\nfunction PaginationComponent({\r\n  isLoading,\r\n  data,\r\n  search,\r\n  currentPage,\r\n  setcurrentPage,\r\n}) {\r\n  const [itemsPerPage, setitemsPerPage] = useState(10);\r\n\r\n  const location = useLocation();\r\n  const [pageNumberLimit, setpageNumberLimit] = useState(10);\r\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(20);\r\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n\r\n  const handleClick = (event) => {\r\n    setcurrentPage(Number(event.target.id));\r\n  };\r\n\r\n  const pages = [];\r\n  for (let i = 1; i <= Math.ceil(search(data).length / itemsPerPage); i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = search(data).slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const renderPageNumbers = pages.map((number) => {\r\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n      return (\r\n        <li\r\n          key={number}\r\n          id={number}\r\n          onClick={handleClick}\r\n          className={currentPage == number ? \"active\" : null}\r\n        >\r\n          {number}\r\n        </li>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  const handleNextbtn = () => {\r\n    setcurrentPage(currentPage + 1);\r\n\r\n    if (currentPage + 1 > maxPageNumberLimit) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n    }\r\n  };\r\n\r\n  const handlePrevbtn = () => {\r\n    setcurrentPage(currentPage - 1);\r\n\r\n    if ((currentPage - 1) % pageNumberLimit == 0) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n    }\r\n  };\r\n\r\n  let pageIncrementBtn = null;\r\n  if (pages.length > maxPageNumberLimit) {\r\n    pageIncrementBtn = <li onClick={handleNextbtn}> &hellip; </li>;\r\n  }\r\n\r\n  let pageDecrementBtn = null;\r\n  if (minPageNumberLimit >= 1) {\r\n    pageDecrementBtn = <li onClick={handlePrevbtn}> &hellip; </li>;\r\n  }\r\n\r\n  const handleLoadMore = () => {\r\n    setitemsPerPage(itemsPerPage + 5);\r\n  };\r\n\r\n  const handleLoadLess = () => {\r\n    if (itemsPerPage > 10) setitemsPerPage(itemsPerPage - 5);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        <Datatable\r\n          currentPage={currentPage}\r\n          isLoading={isLoading}\r\n          data={search(currentItems)}\r\n        />\r\n      }\r\n      <ul className=\"pageNumbers\">\r\n        <li>\r\n          {console.log(location.pathname)}\r\n          <button\r\n            className=\"loadmore\"\r\n            onClick={handlePrevbtn}\r\n            disabled={currentPage == pages[0] ? true : false}\r\n          >\r\n            Prev\r\n          </button>\r\n        </li>\r\n        {pageDecrementBtn}\r\n        {renderPageNumbers}\r\n        {pageIncrementBtn}\r\n\r\n        <li>\r\n          <button\r\n            onClick={handleNextbtn}\r\n            disabled={currentPage == pages[pages.length - 1] ? true : false}\r\n            className=\"loadmore\"\r\n          >\r\n            Next\r\n          </button>\r\n        </li>\r\n      </ul>\r\n      <button onClick={handleLoadMore} className=\"loadmore\">\r\n        Load More\r\n      </button>\r\n      &nbsp; &nbsp;\r\n      <button onClick={handleLoadLess} className=\"loadmore\">\r\n        show less\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PaginationComponent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PaginationComponent from \"../Components/pagination/pagination\";\r\nimport Select, { NonceProvider } from \"react-select\";\r\n\r\nimport \"./styles.css\";\r\nimport useData from \"../hooks/useData\";\r\nimport { Box, Button, Grid, Typography } from \"@material-ui/core\";\r\nimport CircleLoader from \"react-spinners/CircleLoader\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nrequire(\"es6-promise\").polyfill();\r\nrequire(\"isomorphic-fetch\");\r\n\r\nexport default function App() {\r\n  const { data, setData, isLoading, setIsLoading, formData, setFormData } =\r\n    useData();\r\n  const history = useHistory();\r\n  const styles = {\r\n    control: (data) => ({\r\n      ...data,\r\n      height: \"2.5vw\",\r\n      alignItems: \"center\",\r\n      borderWidth: 1,\r\n      borderColor: \"#adadad\",\r\n      borderRadius: 8,\r\n      fontSize: \"0.8vw\",\r\n      fontFamily: \"Montserrat\",\r\n    }),\r\n    menu: (data) => ({\r\n      ...data,\r\n      fontFamily: \"Montserrat\",\r\n      fontSize: \"0.8vw\",\r\n    }),\r\n  };\r\n\r\n  const [q, setQ] = useState(\"\");\r\n  const [searchColumns, setSearchColumns] = useState([\"bank_name\"]);\r\n  const handleSelectChange = (object, action) => {\r\n    let name = action.name;\r\n    let value = object.value;\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [name]: value,\r\n    }));\r\n\r\n    setSearchColumns([value]);\r\n  };\r\n\r\n  const handleSelectChange1 = (object, action) => {\r\n    let name = action.name;\r\n    let value = object.value;\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const List = [\r\n    { value: \"bank_name\", label: \"Bank Name\" },\r\n    { value: \"ifsc\", label: \"IFSC Code\" },\r\n    { value: \"bank_id\", label: \"Bank ID\" },\r\n    { value: \"address\", label: \"Address\" },\r\n    { value: \"branch\", label: \"Branch\" },\r\n    { value: \"city\", label: \"City\" },\r\n  ];\r\n\r\n  const CITIES = [\r\n    { value: \"MUMBAI\", label: \"MUMBAI\" },\r\n    { value: \"CHENNAI\", label: \"CHENNAI\" },\r\n    { value: \"PUNE\", label: \"PUNE\" },\r\n    { value: \"BANGALORE\", label: \"BANGALORE\" },\r\n    { value: \"DELHI\", label: \"DELHI\" },\r\n  ];\r\n\r\n  const [currentPage, setcurrentPage] = useState(1);\r\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(15);\r\n\r\n  function search(rows) {\r\n    return rows.filter((row) =>\r\n      searchColumns.some(\r\n        (column) =>\r\n          row[column].toString().toLowerCase().indexOf(q.toLowerCase()) > -1\r\n      )\r\n    );\r\n  }\r\n\r\n  const columns = data[0] && Object.keys(data[0]);\r\n  return !isLoading ? (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Box>\r\n          <Typography variant=\"h4\" color=\"secondary\">\r\n            BANK BAZAAR{\" \"}\r\n          </Typography>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <label>\r\n          <Typography variant=\"h6\" color=\"primary\">\r\n            Search\r\n          </Typography>\r\n        </label>\r\n        <Box className=\"search\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"searchTerm\"\r\n            value={q}\r\n            placeholder=\"Search Your Category \"\r\n            onChange={(e) => {\r\n              setQ(e.target.value);\r\n              setcurrentPage(1);\r\n            }}\r\n          />\r\n          <button class=\"searchButton\">\r\n            <i class=\"fa fa-search\"></i>\r\n          </button>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Typography variant=\"h6\" color=\"primary\">\r\n          Select Category\r\n        </Typography>\r\n        <Select\r\n          styles={styles}\r\n          name=\"category\"\r\n          onChange={handleSelectChange}\r\n          options={List}\r\n          defaultValue={{ label: \"Bank Name\", value: 0 }}\r\n          theme={(theme) => ({\r\n            ...theme,\r\n            colors: {\r\n              ...theme.colors,\r\n              text: \"black\",\r\n              primary25: \"white\",\r\n              primary: \"#24cebd\",\r\n              primary50: \"#f5fcfb\",\r\n            },\r\n          })}\r\n        ></Select>\r\n      </Grid>\r\n\r\n      <Grid item xs={4}>\r\n        <label>\r\n          <Typography variant=\"h6\" color=\"primary\">\r\n            Select City\r\n          </Typography>\r\n        </label>\r\n        <Select\r\n          styles={styles}\r\n          name=\"city\"\r\n          onChange={handleSelectChange1}\r\n          options={CITIES}\r\n          defaultValue={{ label: \"MUMBAI\", value: 0 }}\r\n          theme={(theme) => ({\r\n            ...theme,\r\n            colors: {\r\n              ...theme.colors,\r\n              text: \"black\",\r\n              primary25: \"white\",\r\n              primary: \"#24cebd\",\r\n              primary50: \"#f5fcfb\",\r\n            },\r\n          })}\r\n        ></Select>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <PaginationComponent\r\n          isLoading={isLoading}\r\n          currentPage={currentPage}\r\n          setcurrentPage={setcurrentPage}\r\n          data={data}\r\n          search={search}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  ) : (\r\n    <Box ml={50} mt={30}>\r\n      {\" \"}\r\n      <CircleLoader color={\"#0bb7a7\"} loading={isLoading} size={400} />\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useData from \"../../hooks/useData\";\r\n\r\nconst Individual_Bank = () => {\r\n  let { ifsc } = useParams();\r\n  const { data } = useData();\r\n  const rowdata = data.filter((item) => item.ifsc == ifsc)[0];\r\n  return (\r\n    <Box margin={10} mt={30}>\r\n      <Card style={{ backgroundColor: \"#e3dcef\" }} variant=\"outlined\">\r\n        <Box ml={2}>\r\n          {\" \"}\r\n          <Typography variant=\"h4\" color=\"secondary\">\r\n            {\" \"}\r\n            Bank Information{\" \"}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Divider></Divider>\r\n        <CardContent>\r\n          <Grid container spacing=\"2\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h5\" color=\"primary\">\r\n                <span style={{ color: \"black\", fontWeight: \"600\" }}>\r\n                  Bank Name\r\n                </span>\r\n                : {rowdata?.bank_name}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h5\" color=\"primary\">\r\n                <span style={{ color: \"black\", fontWeight: \"600\" }}>\r\n                  Bank ID\r\n                </span>\r\n                : {rowdata?.bank_id}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h5\" color=\"primary\">\r\n                <span style={{ color: \"black\", fontWeight: \"600\" }}>\r\n                  Branch Name\r\n                </span>{\" \"}\r\n                {rowdata?.branch}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h5\" color=\"primary\">\r\n                <span style={{ color: \"black\", fontWeight: \"600\" }}>City</span>{\" \"}\r\n                {rowdata?.city}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h5\" color=\"primary\">\r\n                <span style={{ color: \"black\", fontWeight: \"600\" }}>State</span>{\" \"}\r\n                {rowdata?.state}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h5\" color=\"primary\">\r\n                <span style={{ color: \"black\", fontWeight: \"600\" }}>\r\n                  IFSC CODE\r\n                </span>{\" \"}\r\n                {rowdata?.ifsc}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h5\" color=\"primary\">\r\n                <span style={{ color: \"black\", fontWeight: \"600\" }}>\r\n                  Address\r\n                </span>\r\n                : {rowdata?.address}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h5\" color=\"primary\">\r\n                <span style={{ color: \"black\", fontWeight: \"600\" }}>\r\n                  District\r\n                </span>\r\n                : {rowdata?.district}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Individual_Bank;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App/app\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Individual_Bank from \"./Components/Individual_Bank_Details/individual_Bank\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/all-banks\" />\r\n        </Route>\r\n        <Route exact path=\"/all-banks\" component={App} />\r\n        <Route exact path=\"/bank-details/:ifsc\" component={Individual_Bank} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}